#!/usr/bin/python

import dbus
import optparse
import os
import subprocess
import ubot.bot
import ubot.conf
import sys

sys.excepthook = None

parser = optparse.OptionParser()
parser.add_option('-a', '--address', dest='address', default='tcp:host=localhost,port=11235',
                  help='The address of your session bus', metavar='ADDRESS')
parser.add_option('-c', '--config', dest='config',
                  default=os.path.join('~','.config','ubot','ubot.conf'),
                  help="Specify configfile", metavar="FILE")
parser.add_option('-v', '--verbose', dest='verbose', action='count', default=0,
                  help='Print all messages. Use twice to see raw messages as well')
parser.add_option('--reconfigure', dest='reconfigure', action='store_true', default=False,
                  help="Reinitialise the bot's configuration")
opts, args = parser.parse_args()
if args:
    parser.error("No arguments allowed")

opts.config = os.path.expanduser(opts.config)

if opts.reconfigure or not os.path.exists(opts.config):
    import ubot.conf
    ubot.conf.configure(opts.config)

os.environ['DBUS_SESSION_BUS_ADDRESS'] = os.environ.get('DBUS_STARTER_ADDRESS', opts.address)

try:
    dbus.SessionBus()
except dbus.exceptions.DBusException, e:
    if e.get_dbus_name() != 'org.freedesktop.DBus.Error.NoServer':
        raise
    print "DBUS daemon not running, attempting to start"
    out = subprocess.Popen(["/usr/bin/dbus-launch",
        "--config-file", os.path.join(os.path.dirname(opts.config), "session.conf")], stdout=subprocess.PIPE).communicate()[0]
    for line in out.split("\n"):
        if not line.strip():
            continue
        key, val = line.strip().split("=", 1)
        os.environ[key] = val

bot = ubot.bot.Ubot(ubot.conf.UbotConfig(opts.config))
bot.verbose = opts.verbose
bot.run()
